# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main

pr:
  - main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'clean build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false

- task: CopyFiles@2
  displayName: "Copy build output to artifact directory"
  inputs:
    SourceFolder: 'build/libs'
    Contents: '*.jar'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: CopyFiles@2
  displayName: "Copy docker and helm files"
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: |
      Dockerfile
      .dockerignore
      .helm/**
      ssh/**
      entrypoint.sh
    TargetFolder: '$(Build.ArtifactStagingDirectory)/'
    OverWrite: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
